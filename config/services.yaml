# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    s3.default.path: '%env(S3_DEFAULT_PATH)%'
    download.url: '%env(DOWNLOAD_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    S3Files\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    S3Files\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Aws\S3\S3Client:
        arguments:
            -
                credentials:
                    key: '%env(AWS_ACCESS_KEY)%'
                    secret: '%env(AWS_SECRET_KEY)%'
                region: us-east-1
                version: latest

    League\Flysystem\AwsS3v3\AwsS3Adapter:
        arguments:
            - '@Aws\S3\S3Client'
            - '%env(AWS_BUCKET)%'
            - '%env(AWS_BUCKET_PATH)%'

    League\Flysystem\Filesystem:
        arguments:
            - '@League\Flysystem\AwsS3v3\AwsS3Adapter'

    S3Files\Service\Hasher:
        arguments:
            - '%env(APP_SECRET)%'
            - '%env(HASHER_OFFSET)%'

    S3Files\Security\OAuthAuthenticator:
        arguments:
            - '@League\OAuth2\Client\Provider\Google'
            - '@Symfony\Component\Security\Http\HttpUtils'
            - '%env(APP_ENV)%'

    Redis:
        class: Redis
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'
            - method: setOption
              arguments:
                  - !php/const Redis::OPT_PREFIX
                  - 'files_'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
